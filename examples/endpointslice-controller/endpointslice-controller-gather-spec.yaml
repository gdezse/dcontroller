controllers:
  # service controller:
  # - filter services that have an endpointslice controller annotation
  # - convert into simpler shape
  # - demux on spec.ports and
  - name: service-controller
    sources:
      - apiGroup: ""
        kind: Service
    pipeline:
      "@aggregate":
        - "@select":
            "@exists": '$["metadata"]["annotations"]["dcontroller.io/endpointslice-controller-enabled"]'
        - "@project":
            metadata:
              name: $.metadata.name
              namespace: $.metadata.namespace
            spec:
              serviceName: $.metadata.name
              type: $.spec.type
              ports: $.spec.ports
        - "@unwind": $.spec.ports
    target:
      kind: ServiceView
  # endpointslice controller:
  # - join services with the corresponding endpoint slices
  # - create a unique service-id that will be used in gather
  # - demux on "$.endpoints"
  # - filter ready addresses
  # - demux on $.endpoints.addresses
  # - gather into a single endpoint list per service-id
  # - convert into simpler shape
  - name: endpointslice-controller
    sources:
      - kind: ServiceView
      - apiGroup: "discovery.k8s.io"
        kind: EndpointSlice
    pipeline:
      "@join":
        "@and":
          - '@eq':
              - $.ServiceView.spec.serviceName
              - '$["EndpointSlice"]["metadata"]["labels"]["kubernetes.io/service-name"]'
          - '@eq':
              - $.ServiceView.metadata.namespace
              - $.EndpointSlice.metadata.namespace
      "@aggregate":
        - "@project":
            metadata:
              name: $.ServiceView.metadata.name
              namespace: $.ServiceView.metadata.namespace
            spec: $.ServiceView.spec
            endpoints: $.EndpointSlice.endpoints
            id:
              name: $.ServiceView.spec.serviceName
              namespace: $.ServiceView.metadata.namespace
              type: $.ServiceView.spec.type
              protocol: $.ServiceView.spec.ports.protocol
              port: $.ServiceView.spec.ports.port
        - "@unwind": $.endpoints
        - "@select":
            "@eq": ["$.endpoints.conditions.ready", true]
        - "@unwind": $.endpoints.addresses
        - "@gather":
            - $.id
            - $.endpoints.addresses
        - "@project":
            metadata:
              namespace: $.metadata.namespace
              name:
                "@concat":
                  - $.id.name
                  - "-"
                  - $.id.protocol
                  - "-"
                  - $.id.port
            spec:
              serviceName: $.spec.serviceName
              type: $.spec.type
              port: $.spec.ports.port
              targetPort: $.spec.ports.targetPort
              protocol: $.spec.ports.protocol
              addresses: $.endpoints.addresses
    target:
      kind: EndpointView
